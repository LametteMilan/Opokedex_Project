-- Début de la transaction (regroupe les actions en une seule unité)
BEGIN;

-- Suppression des tables si elles existent déjà (pratique avant re-génération)
DROP TABLE IF EXISTS "pokemon", "type", "team", "pokemon_type", "team_pokemon";

-- Table principale : Pokemon, avec les statistiques de chaque Pokémon
CREATE TABLE "pokemon" (
  "id" INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, -- Identifiant auto-incrémenté
  "name" VARCHAR(255) NOT NULL UNIQUE, -- Nom unique et obligatoire
  "hp" INT NOT NULL,                 -- Points de vie
  "atk" INT NOT NULL,               -- Attaque
  "def" INT NOT NULL,               -- Défense
  "atk_spe" INT NOT NULL,           -- Attaque spéciale
  "def_spe" INT NOT NULL,           -- Défense spéciale
  "speed" INT NOT NULL              -- Vitesse
);

-- Table des types (feu, eau, etc.)
CREATE TABLE "type" (
  "id" INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  "name" VARCHAR(255) NOT NULL, -- Nom du type
  "color" VARCHAR(7) NOT NULL   -- Couleur hexadécimale associée
);

-- Table des équipes de Pokémon
CREATE TABLE "team" (
  "id" INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  "name" VARCHAR(255) NOT NULL,  -- Nom de l’équipe
  "description" TEXT             -- Description libre
);

-- Table de liaison entre Pokémon et types (relation N:N)
CREATE TABLE "pokemon_type" (
  "id" INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  "pokemon_id" INT NOT NULL REFERENCES "pokemon"("id"), -- FK vers Pokemon
  "type_id" INT NOT NULL REFERENCES "type"("id")         -- FK vers Type
);

-- Table de liaison entre Pokémon et équipes (relation N:N)
CREATE TABLE "team_pokemon" (
  "id" INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  "pokemon_id" INT NOT NULL REFERENCES "pokemon"("id"), -- FK vers Pokemon
  "team_id" INT NOT NULL REFERENCES "team"("id")        -- FK vers Team
);

-- Fin de la transaction
COMMIT;
